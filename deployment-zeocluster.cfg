# Zope Application buildout - Nginx, Varnish, HAProxy Load Balancer and Zeocluster
# =======================================================================

# Production buildout
# ====================

[buildout]
parts =
    ${buildout:lxml-parts}
    zeoserver
    instance1
    instance2
    instance3
    instance4
    instance5
    instance6
    instance7
    instance8
    instance-debug
    ${buildout:haproxy-parts}
    ${buildout:varnish-parts}
    ${buildout:nginx-parts}
    ${buildout:runscript-parts}
    supervisor
    chown
    logrotation
    backup
    keywords-patch
    
extends =
    packages.cfg
    versions.cfg
    buildout.d/lxml.cfg
    buildout.d/nginx.cfg
    buildout.d/haproxy.cfg
    buildout.d/varnish.cfg
    buildout.d/runscript.cfg
    
    
find-links +=
    http://dist.plone.org/thirdparty/PILwoTk-1.1.6.4.tar.gz
    http://dist.kreativkombinat.de/

eggs-directory  = /opt/zope/chromsystems-buildout/var/cache/eggs
download-cache  = /opt/zope/chromsystems-buildout/var/cache/downloads
extends-cache   = /opt/zope/chromsystems-buildout/var/cache/extends


# Packages to check out/update when buildout is run
# Clear this out if you want to stick to internally released eggs - see above.
auto-checkout =
    

# Make sure buildout never attempts to update packages automatically for
# production use.
always-checkout = false

# Host names/IP addresses. See below for corresponding ports.
[hosts]
# The public hostname used in virtual hosting, i.e. the public facing domain
public          = chromsystems.de
# The host that nginx proxies to
nginx-backend   = ${:varnish}
# The hostname/address that Varnish binds to
varnish         = 127.0.0.1
# The hosts that are allowed to issue PURGE reuqests to Varnish
allow-purge     = 127.0.0.1
# The IP address that Varnish proxies to (do not use a hostname)
varnish-backend = 127.0.0.1
# The hostname that HAProxy binds to
haproxy         = 127.0.0.1
# The IP addresses of each Zope instance
instance1       = 127.0.0.1
instance2       = 127.0.0.1
instance3       = 127.0.0.1
instance4       = 127.0.0.1
instance5       = 127.0.0.1
instance6       = 127.0.0.1
instance7       = 127.0.0.1
instance8       = 127.0.0.1
instance-debug  = 127.0.0.1
# Where to find the syslog deamon to log to
syslog          = localhost
# The hostname that memcached binds to
memcached       = localhost
# The hostname where the database server is found
database        = localhost
# The hostname that supervisord binds to
supervisor      = localhost


# Port corresponding to the hostnames above. Note that to bind to ports
# < 1024, you will need to run ./bin/supervisord as root!
[ports]
http            = 80
https           = 443
nginx-backend   = ${:varnish}
varnish         = 8500
varnish-backend = ${:haproxy}
haproxy         = 8200
haproxy-stats   = 8222
instance1       = 8001
instance2       = 8002
instance3       = 8003
instance4       = 8004
instance5       = 8005
instance6       = 8006
instance7       = 8007
instance8       = 8008
zeo-server      = 8300
instance-debug  = 8499
syslog          = 514
memcached       = 11211
database        = 3306
supervisor      = 9001

[users]
# Process owners for nginx, varnish, haproxy, memcached and Zope
nginx            = www
varnish          = www
haproxy          = www
zope-process     = www
memcached        = www
zope             = www
supervisor       = www
main             = www

# System user accounts for Zope root admin, database access and Supervisor
zope-admin       = zope-admin
supervisor-admin = supervisor-admin

# Passwords for the accounts above
[passwords]
zope-admin       = Ade25Golele
supervisor-admin = Ade25Golele/mTaP102

# Database instances for SQLAlchemy and RelStorage (optional)
[databases]
chromsystems    = chromsystems
zodb            = zodb

# How should varnish store its cache? Increase thesize, in megabytes, as required
[varnish-options]
storage = malloc,1G

[limits]
# How many open files are allowed? This affects the number of concurrent
# connections. On some operating systems, this is set on startup per user
# as the ulimit
open-files = 1024
# Timeout of inactivity for Beaker sessions
session-timeout = 600

[urls]
# This URL is used in the nginx configuration to serve an error page when
# HAProxy detects no viable backend
fallback = /system-error

[plone-sites]
# Plone site ids - used in virtual hosting
main = chromsystems

[sites]
# Plone site ids - used in virtual hosting
main = chromsystems

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${ports:zeo-server}
effective-user = ${users:zope-process}
zeo-var = ${buildout:directory}/var
blob-storage = ${zeoserver:zeo-var}/blobstorage
eggs = ZODB3

[instance]
recipe = plone.recipe.zope2instance
user = ${users:zope-admin}:${passwords:zope-admin}
debug-mode = off
verbose-security = off
effective-user = ${users:zope-process}
http-fast-listen = off
zserver-threads = 1
zodb-cache-size = 10000
zeo-client-cache-size = 300MB
zeo-client = true
shared-blob = on
blob-storage = ${zeoserver:zeo-var}/blobstorage
zeo-address = ${zeoserver:zeo-address}
eggs =
    Pillow
    Zope2
    Plone
    ${eggs:main}
    ${eggs:addon}
    ${eggs:production}
zcml =
environment-vars =
    PTS_LANGUAGES en de
    zope_i18n_allowed_languages en de
    zope_i18n_compile_mo_files true
zcml-additional =

[instance1]
<= instance
http-address = ${hosts:instance1}:${ports:instance1}

[instance2]
<= instance
http-address = ${hosts:instance2}:${ports:instance2}

[instance3]
<= instance
http-address = ${hosts:instance3}:${ports:instance3}

[instance4]
<= instance
http-address = ${hosts:instance4}:${ports:instance4}

[instance5]
<= instance
http-address = ${hosts:instance5}:${ports:instance5}

[instance6]
<= instance
http-address = ${hosts:instance6}:${ports:instance6}

[instance7]
<= instance
http-address = ${hosts:instance7}:${ports:instance7}

[instance8]
<= instance
http-address = ${hosts:instance8}:${ports:instance8}

[instance-debug]
<= instance
http-address = ${hosts:instance-debug}:${ports:instance-debug}
debug-mode = on
verbose-security = on



# Install supervisor, which runs on port 9001
# Run: ``bin/supervisord``
# Run: ``bin/supervisorctl --help``
[supervisor]
recipe = collective.recipe.supervisor
port = ${ports:supervisor}
user = ${users:supervisor-admin}
password = ${passwords:supervisor-admin}
serverurl = http://${hosts:supervisor}:${ports:supervisor}
programs =
    10 zeo        ${zeoserver:location}/bin/runzeo               true ${users:zope-process}
    20 instance1  ${buildout:directory}/bin/instance1 [console] true ${users:zope-process}
    20 instance2  ${buildout:directory}/bin/instance2 [console] true ${users:zope-process}
    20 instance3  ${buildout:directory}/bin/instance3 [console] true ${users:zope-process}
    20 instance4  ${buildout:directory}/bin/instance4 [console] true ${users:zope-process}
    20 instance5  ${buildout:directory}/bin/instance5 [console] true ${users:zope-process}
    20 instance6  ${buildout:directory}/bin/instance6 [console] true ${users:zope-process}
    20 instance7  ${buildout:directory}/bin/instance7 [console] true ${users:zope-process}
    20 instance8  ${buildout:directory}/bin/instance8 [console] true ${users:zope-process}
    
    30 haproxy    ${buildout:directory}/bin/haproxy       [-f ${buildout:directory}/etc/haproxy.conf] true ${users:haproxy}
    40 varnish    ${varnish-build:location}/sbin/varnishd [-F -s ${varnish-options:storage} -f ${buildout:directory}/etc/varnish.vcl -a ${hosts:varnish}:${ports:varnish} -p thread_pools=4 -p thread_pool_min=200 -p thread_pool_max=4000] true ${users:varnish}
    50 nginx      ${nginx-build:location}/sbin/nginx [-c ${buildout:directory}/etc/nginx/nginx.conf] true



[chown]
recipe = plone.recipe.command
command =
	chown -R ${users:main}:${users:zope} ${buildout:directory}/var/
	chown -R ${users:main}:${users:zope} ${buildout:directory}/parts/
	chown -R ${users:main}:${users:zope} ${buildout:directory}/etc/
update-command =
	${chown:command}
	
[logrotation]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/templates/logrotate.conf.template
output = ${buildout:directory}/etc/logrotate.conf

[backup]
recipe = collective.recipe.backup
location = /opt/zope/backups/${plone-sites:main}/backups
snapshotbackup = /opt/zope/backups/${plone-sites:main}/snapshotbackups
keep = 2
full = false
debug = true

[keywords-patch]
recipe = collective.recipe.patch
egg = Products.Archetypes==1.7.6
patches = ${buildout:directory}/etc/patches/keywords.patch
