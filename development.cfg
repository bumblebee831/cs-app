# Development buildout
# ====================

[buildout]
parts =
    ${buildout:lxml-parts}
    instance-debug
    omelette
    zopepy
    zopeskel
    checkversions
    i18nduder
    mkrelease

extends =
    buildout.d/lxml.cfg
    packages.cfg
    

auto-checkout =
    chromsystems.userdata
    kk.chproducts
    kk.chromsystems
    kk.login_portlet

always-checkout = force

# Override Zope instance settings to add custom packages managed by mr.developer

[instance-debug]
recipe = plone.recipe.zope2instance
http-address = 8499
user = zope-admin:admin
verbode-security = on
eggs =
    Pillow
    ${eggs:main}
    ${eggs:addon}
    ${eggs:devtools}

[test]
recipe = zc.recipe.testrunner
eggs = ${eggs:test}
defaults = ['--auto-color', '--auto-progress']

# Coverage reports
# Run: 'bin/test --coverage=coverage' and 'bin/coveragereport'
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${eggs:main}
    ${eggs:devtools}

[zopepy]
recipe = zc.recipe.egg
eggs =
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy

[zopeskel]
recipe = zc.recipe.egg
eggs = 
    ZopeSkel
    zopeskel.dexterity

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[i18nduder]
#handy shortcuts for i18n tasks
#duder create -l de -p my.package #creates a locales folder for de
#duder update -p my.package #rebuild-pot and syncs to all pos
#duder mo -p my.package #compiles all po files to mo
recipe = zc.recipe.egg
eggs = ${eggs:main}
       zettwerk.i18nduder

[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease
